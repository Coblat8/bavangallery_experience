/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 yard.glb --transform --types 
Files: yard.glb [342.59KB] > D:\dev\bavan\bavan-gallery\public\yard-transformed.glb [325.42KB] (5%)
*/

import * as THREE from 'three'
import React from 'react'
import { useEnvironment, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
     green_grass_Baked: THREE.Mesh
     tree002: THREE.Mesh
     tree003: THREE.Mesh
   }
   materials: {
     green_grass_Baked: THREE.MeshStandardMaterial
     ['Object_10.001_Baked']: THREE.MeshStandardMaterial
     Vegetation_Bark_Maple_1: THREE.MeshStandardMaterial
   }
}

export function Yard(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/yard-transformed.glb') as GLTFResult

  const treeEnv = useEnvironment({ files: '/potsdamer_platz_1k.hdr'})

  materials.Vegetation_Bark_Maple_1.envMap = treeEnv
  materials.Vegetation_Bark_Maple_1.envMapIntensity= 0.3
  materials['Object_10.001_Baked'].emissiveIntensity = 0.4

  return (
    <group {...props} dispose={null}>
      <group >
        <mesh name="green_grass_Baked" geometry={nodes.green_grass_Baked.geometry} material={materials.green_grass_Baked} />
        <mesh name="tree002" geometry={nodes.tree002.geometry} material={materials['Object_10.001_Baked']} position={[7.035, 3.769, -9.618]} scale={[0.873, 0.916, 1]} />
        <mesh name="tree003" geometry={nodes.tree003.geometry} material={materials.Vegetation_Bark_Maple_1} />
      </group>
    </group>
  )
}

useGLTF.preload('/yard-transformed.glb')
